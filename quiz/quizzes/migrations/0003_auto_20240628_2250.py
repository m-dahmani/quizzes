# Generated by Django 4.2.13 on 2024-06-28 22:50
from django.core.management.sql import emit_post_migrate_signal
from django.db import migrations


def create_moderators_group(apps, schema_migration):
    """The function who will create the moderators  groups
       the create_groups function assigns existing users to the appropriate groups during migration"""

    # ensure that permissions have been created
    emit_post_migrate_signal(verbosity=1, interactive=False, db='default')

    # we cannot access models directly from imports, use the apps.get_model() function to retrieve them
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # Get custom permission(deactivate_quiz)
    deactivate_quiz = Permission.objects.get(codename='deactivate_quiz')

    # Get moderators groups
    # Create the moderators group
    # moderators = Group(name='moderators')
    # moderators.save()
    # Using get_or_create to ensure the 'moderators' group is created if it does not already exist
    moderators, created = Group.objects.get_or_create(name='moderators')
    # Assign permissions to the moderators groups
    # The add method would add permissions to those already present
    moderators.permissions.add(deactivate_quiz)


class Migration(migrations.Migration):
    # list the migrations that must be executed before this one
    dependencies = [
        ("quizzes", "0002_alter_quiz_options_quiz_is_active"),  # Replace with the actual previous migration
    ]
    # list of operations that the migration will perform
    operations = [
        # add the create_groups function as an argument to the migrations.RunPython class
        migrations.RunPython(create_moderators_group)
    ]



